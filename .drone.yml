pipeline:
  publish:
    image: maxvasin/resolve-docker
    pull: true
    commands:
      - export REGISTRY_VERSION=$(/scripts/package_json nightly ${DRONE_COMMIT})
      - echo REGISTRY_VERSION=$REGISTRY_VERSION >> .entry
      - echo REGISTRY_PACKAGE=$(/scripts/package_json name) >> .entry
      - echo REGISTRY_DOWNSTREAM=true >> .entry
      - /scripts/npm_patch_rc
      - /scripts/npm_publish $REGISTRY_VERSION
    secrets: [ npm_repository, npm_token ]
    when:
      event: push

  downstream_registry:
    image: maxvasin/drone-downstream-registry
    pull: true

    registry_path: /data/registry
    action: package-build
    server: http://ci.resolve.sh
    params: .entry
    secrets: [ secret_server_token ]
    when:
      event: push
    repositories:
      - max-vasin/drone-playground-sub1
      - max-vasin/drone-playground-sub2

  trigger:
    image: plugins/downstream
    server: http://ci.resolve.sh
    fork: true
    wait: true
    secrets: [ downstream_token ]
    params:
    - .entry
    when:
      event: push
    repositories:
      - max-vasin/drone-playground-sub1@master
      - max-vasin/drone-playground-sub2@master

  npm-tag:
    image: maxvasin/resolve-docker
    pull: true
    commands:
      - /scripts/npm_patch_rc
      - /scripts/npm_tag $REGISTRY_PACKAGE $REGISTRY_VERSION latest-stable

    secrets: [ npm_repository, npm_token ]
    when:
      event: deployment
      environment: downstream-success

  notify-downstream-failure:
    image: node:9
    commands:
      - echo Downstream builds failure
    when:
      event: deployment
      environment: downstream-failure



